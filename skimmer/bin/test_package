#!/bin/bash

# Check if ROOT is on $PATH
if ! command -v root &> /dev/null; then
    echo "ERROR: ROOT cannot be found and is needed to run the skimmer"
    exit 1
fi

print_help()
{
    echo "Usage:"
    echo ""
    echo "  ./bin/test_package [--help] [--debug] [--python2] /path/to/package.tar.gz FILE1.root [FILE2.root FILE3.root ...]"
    echo ""
    exit 0
}

# Read the CLI options
TEMP=`getopt -o h --long help,debug,python2 -- "$@"`
eval set -- "$TEMP"
# Extract options and their arguments
PYTHON2=false
DEBUG=false
while true; do
    case "$1" in
        -h|--help)
            print_help; shift 1;;
        -d|--debug)
            DEBUG=true; shift 1;;
        --python2)
            PYTHON2=true; shift 1;;
        --) shift; break;;
        *) echo "Internal error!"; exit 1;;
    esac
done

# Extract options and their arguments
PACKAGE=$1
shift 1
NANOAODPATHS=($@)

echo "----------------------------------------------------"
if [[ "${NANOAODPATHS[@]}" == "" ]]; then
    echo "ERROR: no input file(s) provided!"
    exit 1
elif [[ "${PACKAGE}" != "" ]]; then
    echo "NanoAOD to skim: ${NANOAODPATHS[@]}"
    echo "NanoAOD skimmer: ${PACKAGE}"
else
    echo "ERROR: no package specified"
    exit 1
fi
echo "----------------------------------------------------"
echo ""

# Check that package exists
if [[ ! -f $PACKAGE ]]; then
    echo "ERROR: ${PACKAGE} does not exist!"
    exit 1
fi

# Go to a working directory that will be cleaned afterwards
ORIG_DIR=$PWD
mkdir -p temp_dir
cd temp_dir

tar xf $PACKAGE # It will overwrite if necessary
cd NanoAODTools
bash standalone/env_standalone.sh build
source standalone/env_standalone.sh

if [[ "$PYTHON2" == "true" ]]; then PYTHONX="python2"; else PYTHONX="python3"; fi

echo ""
echo "Running sh scripts/run.sh $PYTHONX ${NANOAODPATHS[@]}"
echo "------------------ scripts/run.sh ------------------"
cat scripts/run.sh
echo "----------------------------------------------------"
sh scripts/run.sh $PYTHONX ${NANOAODPATHS[@]}
echo ""

RUN_STATUS=$?
if [[ $RUN_STATUS != 0 ]]; then
    echo "Removing output because scripts/nano_postproc.py crashed with exit code $?"
    rm *.root
    exit 1
fi

# Merge skims if multiple are made
SKIMFILES=($(ls *_Skim.root))
if [[ "${#SKIMFILES[@]}" == "0" ]]; then
    echo "No output files to merge; exiting..."
    exit 0
elif [[ "${#SKIMFILES[@]}" == "1" ]]; then
    mv ${SKIMFILES[0]} output.root
else
    MERGECMD="$PYTHONX scripts/haddnano.py output.root ${SKIMFILES[@]}"
    echo $MERGECMD
    $MERGECMD
fi

mv *.root $ORIG_DIR/

cd $ORIG_DIR

if [[ "$DEBUG" == "false" ]]; then
    # Clean up
    rm -rf temp_dir
fi
